# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.3
#
# <auto-generated>
#
# Generated from file `Hello.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module Demo
_M_Demo = Ice.openModule('Demo')
__name__ = 'Demo'

_M_Demo._t_Hello = IcePy.defineValue('::Demo::Hello', Ice.Value, -1, (), False, True, None, ())

if 'HelloPrx' not in _M_Demo.__dict__:
    _M_Demo.HelloPrx = Ice.createTempClass()
    class HelloPrx(Ice.ObjectPrx):

        def SayHello(self, username, context=None):
            return _M_Demo.Hello._op_SayHello.invoke(self, ((username, ), context))

        def SayHelloAsync(self, username, context=None):
            return _M_Demo.Hello._op_SayHello.invokeAsync(self, ((username, ), context))

        def begin_SayHello(self, username, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo.Hello._op_SayHello.begin(self, ((username, ), _response, _ex, _sent, context))

        def end_SayHello(self, _r):
            return _M_Demo.Hello._op_SayHello.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_Demo.HelloPrx.ice_checkedCast(proxy, '::Demo::Hello', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_Demo.HelloPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::Demo::Hello'
    _M_Demo._t_HelloPrx = IcePy.defineProxy('::Demo::Hello', HelloPrx)

    _M_Demo.HelloPrx = HelloPrx
    del HelloPrx

    _M_Demo.Hello = Ice.createTempClass()
    class Hello(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Demo::Hello', '::Ice::Object')

        def ice_id(self, current=None):
            return '::Demo::Hello'

        @staticmethod
        def ice_staticId():
            return '::Demo::Hello'

        def SayHello(self, username, current=None):
            raise NotImplementedError("servant method 'SayHello' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_Demo._t_HelloDisp)

        __repr__ = __str__

    _M_Demo._t_HelloDisp = IcePy.defineClass('::Demo::Hello', Hello, (), None, ())
    Hello._ice_type = _M_Demo._t_HelloDisp

    Hello._op_SayHello = IcePy.Operation('SayHello', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), ((), IcePy._t_string, False, 0), ())

    _M_Demo.Hello = Hello
    del Hello

# End of module Demo
